% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TGS_func.R
\name{learn.TGS}
\alias{learn.TGS}
\title{Implementing the TGS Algorithm.}
\usage{
learn.TGS(isfile = 0, input.data.filename = "", num.timepts = 0,
  true.net.filename = "", input.wt.data.filename = "",
  is.discrete = TRUE, num.discr.levels = 2, discr.algo = "",
  mi.estimator = "mi.pca.cmi", apply.aracne = FALSE,
  clr.algo = "CLR", max.fanin = 14, allow.self.loop = TRUE,
  scoring.func = "BIC", input.dirname = "", output.dirname = "",
  json.file = "")
}
\arguments{
\item{isfile}{0 if the parameters are given in a json file otherwise 1.}

\item{input.data.filename}{name of the file containing the data without the directory name}

\item{num.timepts}{number of timepoints}

\item{true.net.filename}{File containing the true network without the directory name}

\item{input.wt.data.filename}{File containing Input weighted data without the directory name}

\item{is.discrete}{whether the data is discretized or not}

\item{num.discr.levels}{number of discreteized levels}

\item{discr.algo}{The algo to follow in case of not discretized. Possible values:- {discretizeData.2L.Tesla,discretizeData.2L.wt.l}}

\item{mi.estimator}{The mi estimator to use}

\item{apply.aracne}{Whether to apply aracne}

\item{clr.algo}{CLR algo to use Posible values :- {CLR, CLR2, CLR2.1, CLR3, spearman}}

\item{max.fanin}{Maximum number of input edges in the graph per node}

\item{allow.self.loop}{Whether to allow self loops in the graph}

\item{scoring.func}{Which scoring func to use}

\item{input.dirname}{Name of the directory where input files are. By default your current directory unless specified otherwise}

\item{output.dirname}{Name of the directory where output files are to be stored. By default your current directory unless specified otherwise}

\item{json.file}{name of the json file along with directory if parameters are to be read from json file}
}
\description{
It Uncovers the underlying temporal sequence of gene regulatory events in the form of time-varying Gene Regulatory Networks (GRNs) 
It learns the time-varying GRN structures independently of each other, without imposing any structural constraint. However, 
it is time intensive and hence not suitable for large-scale GRNs.
}
